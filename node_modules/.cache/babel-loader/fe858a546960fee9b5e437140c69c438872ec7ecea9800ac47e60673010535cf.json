{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhagyashri Mathur\\\\Documents\\\\netflix-clone\\\\src\\\\App.jsx\";\nimport React from \"react\";\nimport \"./index.css\";\nimport Card from \"./Cards\";\nimport Sdata from \"./Sdata\";\n\n// console.log(Sdata[0].sname);\n\n// \n// const favSeries = \"netflix\";\n// const FavS = () => {\n//   if (favSeries === \"netflix\") {\n//     return (\n//       <Card\n//         key={Sdata[1].id}\n//         imgsrc={Sdata[1].imgsrc}\n//         title={Sdata[1].title}\n//         sname={Sdata[1].sname}\n//         link={Sdata[1].link}\n//       />\n//     );\n//   } else {\n//   }\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n    className: \"heading_style\",\n    children: \"List of top 5 Netflix Series in 2023\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(FavS, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this)]\n}, void 0, true);\n// end for if else\n\n// this is for all\n// const App = () => (\n//   <>\n//     <h1 className=\"heading_style\">List of top 5 Netflix Series in 2023</h1>\n//     {/* how to use map method  */}\n//     {Sdata.map((val, index) => {\n//       console.log(index);\n//       {/* return (\n//         <Card\n//           key={val.id}\n//           imgsrc={val.imgsrc}\n//           title={val.title}\n//           sname={val.sname}\n//           link={val.link}\n//         />\n//       ); */}\n//     })}\n//   </>\n// );\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Card","Sdata","jsxDEV","_jsxDEV","Fragment","_Fragment","App","children","className","fileName","_jsxFileName","lineNumber","columnNumber","FavS","_c","$RefreshReg$"],"sources":["C:/Users/Bhagyashri Mathur/Documents/netflix-clone/src/App.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./index.css\";\r\nimport Card from \"./Cards\";\r\nimport Sdata from \"./Sdata\";\r\n\r\n// console.log(Sdata[0].sname);\r\n\r\n// \r\n// const favSeries = \"netflix\";\r\n// const FavS = () => {\r\n//   if (favSeries === \"netflix\") {\r\n//     return (\r\n//       <Card\r\n//         key={Sdata[1].id}\r\n//         imgsrc={Sdata[1].imgsrc}\r\n//         title={Sdata[1].title}\r\n//         sname={Sdata[1].sname}\r\n//         link={Sdata[1].link}\r\n//       />\r\n//     );\r\n//   } else {\r\n//   }\r\n// };\r\n\r\nconst App = () => (\r\n  <>\r\n    <h1 className=\"heading_style\">List of top 5 Netflix Series in 2023</h1>\r\n    <FavS />\r\n  </>\r\n);\r\n// end for if else\r\n\r\n// this is for all\r\n// const App = () => (\r\n//   <>\r\n//     <h1 className=\"heading_style\">List of top 5 Netflix Series in 2023</h1>\r\n//     {/* how to use map method  */}\r\n//     {Sdata.map((val, index) => {\r\n//       console.log(index);\r\n//       {/* return (\r\n//         <Card\r\n//           key={val.id}\r\n//           imgsrc={val.imgsrc}\r\n//           title={val.title}\r\n//           sname={val.sname}\r\n//           link={val.link}\r\n//         />\r\n//       ); */}\r\n//     })}\r\n//   </>\r\n// );\r\n\r\nexport default App;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,aAAa;AACpB,OAAOC,IAAI,MAAM,SAAS;AAC1B,OAAOC,KAAK,MAAM,SAAS;;AAE3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,MAAMC,GAAG,GAAGA,CAAA,kBACVH,OAAA,CAAAE,SAAA;EAAAE,QAAA,gBACEJ,OAAA;IAAIK,SAAS,EAAC,eAAe;IAAAD,QAAA,EAAC;EAAoC;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC,eACvET,OAAA,CAACU,IAAI;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAAA,eACR,CACH;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAE,EAAA,GA1BMR,GAAG;AA4BT,eAAeA,GAAG;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}